name: Build MapCache on Linux
on: [ push ]

jobs:

    build-matrix:
      strategy:
        matrix:
          os: [ ubuntu-18.04, ubuntu-20.04 ]
          option: [ minimal, default, maximal ]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Install dependencies
          run: |
            if [[ 'minimal,default,maximal' =~ ${{ matrix.option }} ]]
            then
              sudo apt-get update -y
              sudo apt-get upgrade -y
              sudo apt-get install -y libcurl4-openssl-dev apache2-dev
            fi
            if [[ 'default,maximal' =~ ${{ matrix.option }} ]]
            then
              sudo apt-get install -y libgdal-dev libfcgi-dev
            fi
            if [[ 'maximal' =~ ${{ matrix.option }} ]]
            then
              sudo apt-get install -y libhiredis-dev libdb-dev libmapserver-dev
            fi

        - name: Build MapCache
          run: |
            if [[ 'minimal' == ${{ matrix.option }} ]]
            then
              options="-DWITH_SQLITE=OFF \
                       -DWITH_PIXMAN=OFF \
                       -DWITH_GDAL=OFF \
                       -DWITH_APACHE=OFF \
                       -DWITH_CGI=OFF \
                       -DWITH_OGR=OFF \
                       -DWITH_GEOS=OFF \
                       -DWITH_MAPCACHE_DETAIL=OFF"
            elif [[ 'default' == ${{ matrix.option }} ]]
            then
              options=""
            elif [[ 'maximal' == ${{ matrix.option }} ]]
            then
              options="-DWITH_POSTGRESQL=ON \
                       -DWITH_BERKELEY_DB=ON \
                       -DWITH_MEMCACHE=ON \
                       -DWITH_REDIS=ON \
                       -DWITH_TIFF=ON \
                       -DWITH_TIFF_WRITE_SUPPORT=ON \
                       -DWITH_GEOTIFF=ON \
                       -DWITH_PCRE=ON \
                       -DWITH_MAPSERVER=ON \
                       -DWITH_RIAK=OFF"
            fi
            mkdir build
            cd build
            cmake ${options} ${{ github.workspace }}
            make
            sudo make install

        - name: Setup tests
          run: |
            if [[ 'ubuntu-20.04' == ${{ matrix.os }} ]] \
               && [[ 'default' == ${{ matrix.option }} ]]
            then
              cd ${{ github.workspace }}/tests
              mkdir /tmp/mc
              sudo chmod -R a+rw /tmp/mc
              cp data/mapcache.xml /tmp/mc
              cp data/world.tif /tmp/mc
              sudo cp data/mapcache.load /etc/apache2/mods-available
              sudo cp data/mapcache.conf /etc/apache2/mods-available
              cd /etc/apache2/mods-enabled/
              sudo ln -s ../mapcache.load mapcache.load
              sudo ln -s ../mapcache.conf mapcache.conf
              sudo service apache2 restart
            fi

        - name: Run tests
          run: |
            if [[ 'ubuntu-20.04' == ${{ matrix.os }} ]] \
               && [[ 'default' == ${{ matrix.option }} ]]
            then
              mapcache_seed -c /tmp/mc/mapcache.xml -t global --force -z 0,1
              gdalinfo -checksum \
                /tmp/mc/global/GoogleMapsCompatible/00/000/000/000/000/000/000.jpg
            fi
